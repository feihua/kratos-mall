// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/feihua/kratos-mall/app/sms/internal/biz"
	"github.com/feihua/kratos-mall/app/sms/internal/conf"
	"github.com/feihua/kratos-mall/app/sms/internal/data"
	"github.com/feihua/kratos-mall/app/sms/internal/server"
	"github.com/feihua/kratos-mall/app/sms/internal/service"
	"github.com/go-kratos/kratos/v2"
	"github.com/go-kratos/kratos/v2/log"
)

// Injectors from wire.go:

// initApp init kratos application.
func initApp(confServer *conf.Server, registry *conf.Registry, confData *conf.Data, logger log.Logger) (*kratos.App, func(), error) {
	db := data.NewDB(confData, logger)
	dataData, cleanup, err := data.NewData(db, logger)
	if err != nil {
		return nil, nil, err
	}
	greeterRepo := data.NewGreeterRepo(dataData, logger)
	greeterUsecase := biz.NewGreeterUsecase(greeterRepo, logger)
	couponRepo := data.NewCouponRepo(dataData, logger)
	couponUseCase := biz.NewCouponUseCase(couponRepo, logger)
	couponHistoryRepo := data.NewCouponHistoryRepo(dataData, logger)
	couponHistoryUseCase := biz.NewCouponHistoryUseCase(couponHistoryRepo, logger)
	flashPromotionRepo := data.NewFlashPromotionRepo(dataData, logger)
	flashPromotionUseCase := biz.NewFlashPromotionUseCase(flashPromotionRepo, logger)
	flashPromotionHistoryRepo := data.NewFlashPromotionHistoryRepo(dataData, logger)
	flashPromotionHistoryUseCase := biz.NewFlashPromotionHistoryUseCase(flashPromotionHistoryRepo, logger)
	flashPromotionSessionRepo := data.NewFlashPromotionSessionRepo(dataData, logger)
	flashPromotionSessionUseCase := biz.NewFlashPromotionSessionUseCase(flashPromotionSessionRepo, logger)
	homeAdvertiseRepo := data.NewHomeAdvertiseRepo(dataData, logger)
	homeAdvertiseUseCase := biz.NewHomeAdvertiseUseCase(homeAdvertiseRepo, logger)
	homeBrandRepo := data.NewHomeBrandRepo(dataData, logger)
	homeBrandUseCase := biz.NewHomeBrandUseCase(homeBrandRepo, logger)
	homeNewProductRepo := data.NewHomeNewProductRepo(dataData, logger)
	homeNewProductUseCase := biz.NewHomeNewProductUseCase(homeNewProductRepo, logger)
	homeRecommendProductRepo := data.NewHomeRecommendProductRepo(dataData, logger)
	homeRecommendProductUseCase := biz.NewHomeRecommendProductUseCase(homeRecommendProductRepo, logger)
	homeRecommendSubjectRepo := data.NewHomeRecommendSubjectRepo(dataData, logger)
	homeRecommendSubjectUseCase := biz.NewHomeRecommendSubjectUseCase(homeRecommendSubjectRepo, logger)
	smsService := service.NewSmsService(greeterUsecase, logger, couponUseCase, couponHistoryUseCase, flashPromotionUseCase, flashPromotionHistoryUseCase, flashPromotionSessionUseCase, homeAdvertiseUseCase, homeBrandUseCase, homeNewProductUseCase, homeRecommendProductUseCase, homeRecommendSubjectUseCase)
	grpcServer := server.NewGRPCServer(confServer, smsService, logger)
	registrar := server.NewRegistrar(registry)
	app := newApp(logger, grpcServer, registrar)
	return app, func() {
		cleanup()
	}, nil
}
